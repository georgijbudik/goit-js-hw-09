{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAoBC,GAClBA,EAAMC,iBAON,IALA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAaC,SAASJ,EAAMK,OAC5BC,EAAYF,SAASH,EAAKI,OAC1BE,EAAgBH,SAASF,EAAOG,OAE7BG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EAAG,CAE1C1B,EAAc0B,EADOL,GAAcK,EAAI,GAAKF,GAEzCG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAGjD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', submitForm);\n\nfunction submitForm(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n  const firstDelay = parseInt(delay.value);\n  const delayStep = parseInt(step.value);\n  const promiseAmount = parseInt(amount.value);\n\n  for (let i = 1; i <= promiseAmount; i += 1) {\n    const currentDelay = firstDelay + (i - 1) * delayStep;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","firstDelay","parseInt","value","delayStep","promiseAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.fd37349d.js.map"}